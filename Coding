void employeePage() {
    int choice;

    while (1) {
        printf("\n=== Employee Page ===\n");
        printf("1. View List of Customers\n");
        printf("2. View List of Accommodations\n");
        printf("3. Logout\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        getchar(); // Consume newline character

        switch (choice) {
            case 1:
                viewCustomerList();
                break;
            case 2:
                viewAccommodations();
                break;
            case 3:
                printf("Logging out from Employee Page.\n");
                return;
            default:
                printf("Invalid choice. Please try again.\n");
        }
    }
}
void viewCustomerList() {
    int found = 0;
    printf("\n--- Customer List ---\n");

    for (int i = 0; i < userCount; i++) {
        if (strcmp(users[i].role, "Customer") == 0) {
            found = 1;
            printf("Name: %s\n", users[i].name);
            printf("Contact: %s\n", users[i].contact);
            printf("--------------------------\n");
        }
    }

    if (!found) {
        printf("No customers found.\n");
    }
}
void viewAccommodations() {
    if (accommodationCount == 0) {
        printf("No accommodations available.\n");
        return;
    }

    printf("\n--- List of Accommodations ---\n");
    for (int i = 0; i < accommodationCount; i++) {
        printf("Room ID: %d\n", accommodations[i].roomID);
        printf("Room Type: %s\n", accommodations[i].roomType);
        printf("Price: %.2f\n", accommodations[i].price);
        printf("Status: %s\n", accommodations[i].available ? "Available" : "Booked");
        printf("--------------------------\n");
    }
}



